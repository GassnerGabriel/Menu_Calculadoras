<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>